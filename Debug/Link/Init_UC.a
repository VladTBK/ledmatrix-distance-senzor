;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void Init_UC(void)
; 0001 001D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 001E // Declare your local variables here
; 0001 001F 
; 0001 0020 // Crystal Oscillator division factor: 1
; 0001 0021 #pragma optsize-
; 0001 0022 CLKPR=(1<<CLKPCE);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0001 0023 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0001 0024 #ifdef _OPTIMIZE_SIZE_
; 0001 0025 #pragma optsize+
; 0001 0026 #endif
; 0001 0027 
; 0001 0028 /// Input/Output Ports initialization
; 0001 0029 // Port A initialization
; 0001 002A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 002B DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (1<<DDA0);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 002C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 002D PORTA=(1<<PORTA7) | (1<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 002E 
; 0001 002F // Port B initialization
; 0001 0030 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 0031 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 0032 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 0033 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 0034 
; 0001 0035 // Port C initialization
; 0001 0036 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 0037 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 0038 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 0039 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 003A 
; 0001 003B // Port D initialization
; 0001 003C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0001 003D DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 003E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0001 003F PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 0040 
; 0001 0041 // Timer/Counter 0 initialization
; 0001 0042 // Clock source: System Clock
; 0001 0043 // Clock value: Timer 0 Stopped
; 0001 0044 // Mode: Normal top=0xFF
; 0001 0045 // OC0A output: Disconnected
; 0001 0046 // OC0B output: Disconnected
; 0001 0047 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 0048 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0049 TCNT0=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0001 004A OCR0A=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 004B OCR0B=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 004C 
; 0001 004D // Timer/Counter 1 initialization
; 0001 004E // Clock source: System Clock
; 0001 004F // Clock value: Timer1 Stopped
; 0001 0050 // Mode: Normal top=0xFFFF
; 0001 0051 // OC1A output: Disconnected
; 0001 0052 // OC1B output: Disconnected
; 0001 0053 // Noise Canceler: Off
; 0001 0054 // Input Capture on Falling Edge
; 0001 0055 // Timer1 Overflow Interrupt: Off
; 0001 0056 // Input Capture Interrupt: Off
; 0001 0057 // Compare A Match Interrupt: Off
; 0001 0058 // Compare B Match Interrupt: Off
; 0001 0059 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 005A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 005B TCNT1H=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0001 005C TCNT1L=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0001 005D ICR1H=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 005E ICR1L=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0001 005F OCR1AH=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 0060 OCR1AL=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0001 0061 OCR1BH=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 0062 OCR1BL=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0001 0063 
; 0001 0064 // Timer/Counter 2 initialization
; 0001 0065 // Clock source: System Clock
; 0001 0066 // Clock value: Timer2 Stopped
; 0001 0067 // Mode: Normal top=0xFF
; 0001 0068 // OC2A output: Disconnected
; 0001 0069 // OC2B output: Disconnected
; 0001 006A ASSR=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0001 006B TCCR2A = 0b01000011;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0001 006C TCCR2B = 0b00001001;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0001 006D TCNT2=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0001 006E OCR2A=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0001 006F OCR2B=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0001 0070 // Timer/Counter 0 Interrupt(s) initialization
; 0001 0071 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0001 0072 
; 0001 0073 // Timer/Counter 1 Interrupt(s) initialization
; 0001 0074 TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0001 0075 
; 0001 0076 // Timer/Counter 2 Interrupt(s) initialization
; 0001 0077 TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0001 0078 
; 0001 0079 // External Interrupt(s) initialization
; 0001 007A // INT0: Off
; 0001 007B // INT1: Off
; 0001 007C // INT2: Off
; 0001 007D // Interrupt on any change on pins PCINT0-7: Off
; 0001 007E // Interrupt on any change on pins PCINT8-15: Off
; 0001 007F // Interrupt on any change on pins PCINT16-23: Off
; 0001 0080 // Interrupt on any change on pins PCINT24-31: Off
; 0001 0081 EICRA=(0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0001 0082 EIMSK=(0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0001 0083 PCICR=(0<<PCIE3) | (0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0084 
; 0001 0085 // USART0 initialization
; 0001 0086 // USART0 disabled
; 0001 0087 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0001 0088 
; 0001 0089 // USART1 initialization
; 0001 008A // USART1 disabled
; 0001 008B UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 008C 
; 0001 008D // Analog Comparator initialization
; 0001 008E // Analog Comparator: Off
; 0001 008F // The Analog Comparator's positive input is
; 0001 0090 // connected to the AIN0 pin
; 0001 0091 // The Analog Comparator's negative input is
; 0001 0092 // connected to the AIN1 pin
; 0001 0093 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0001 0094 ADCSRB=(0<<ACME);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 0095 // Digital input buffer on AIN0: On
; 0001 0096 // Digital input buffer on AIN1: On
; 0001 0097 DIDR1=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0098 
; 0001 0099 // ADC initialization
; 0001 009A // ADC disabled
; 0001 009B ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 009C 
; 0001 009D // SPI initialization
; 0001 009E // SPI disabled
; 0001 009F SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0001 00A0 
; 0001 00A1 // TWI initialization
; 0001 00A2 // TWI disabled
; 0001 00A3 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0001 00A4 // Watchdog Timer initialization
; 0001 00A5 // Watchdog Timer Prescaler: OSC/2048
; 0001 00A6 #pragma optsize-
; 0001 00A7 #asm("wdr")
;PCODE: $00000069 VOL: 0
; 0001 00A8 // Write 2 consecutive values to enable watchdog
; 0001 00A9 // this is NOT a mistake !
; 0001 00AA WDTCSR=0x18;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0001 00AB WDTCSR=0x08;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0001 00AC #ifdef _OPTIMIZE_SIZE_
; 0001 00AD #pragma optsize+
; 0001 00AE #endif
; 0001 00AF }
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
