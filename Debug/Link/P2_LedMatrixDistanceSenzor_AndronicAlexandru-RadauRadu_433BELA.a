;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;interrupt [19] void ovf_interrupt (void)
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D timerCounter = timerCounter+1; // count the number of overflows
;PCODE: $0000000F VOL: 1
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 1
; 0000 000E }
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;void main(void)
; 0000 0015 {result = 0; timerCounter = 0;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 1
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 1
; 0000 0016 Init_UC();
;PCODE: $0000001A VOL: 0
; 0000 0017 TCCR0B = (0<<CS02)|(0<<CS01)|(1<<CS00); // select internal clock with no prescaling
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0018 TCNT0 = 0; // reset counter to zero
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0019 TIMSK0 = 1<<TOIE0; // enable timer interrupt
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 001A #asm("sei");
;PCODE: $00000021 VOL: 0
; 0000 001B 
; 0000 001C while (TRUE)
;PCODE: $00000022 VOL: 0
; 0000 001D {wdogtrig();
;PCODE: $00000023 VOL: 0
; 0000 001E 
; 0000 001F PORTA.0 =1; // set high for 10us
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0020 delay_us(10);
;PCODE: $00000026 VOL: 0
; 0000 0021 PORTA.0 = 0; // clear
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0022 TCNT1H = 0;TCNT1L = 0;    /* Clear Timer counter */
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0023 TCCR1B = 0x41;    /* Capture on rising edge, No prescaler*/
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0024 TIFR1 = 1<<ICF1;    /* Clear ICP flag (Input Capture flag) */
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0025 TIFR1 = 1<<TOV1;    /* Clear Timer Overflow flag */
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0026 while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for rising edge */
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0027 TCNT1H = 0;TCNT1L = 0;    /* Clear Timer counter */
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0028 TCCR1B = 0x01;    /* Capture on falling edge, No prescaler */
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0029 TIFR1 = 1<<ICF1;    /* Clear ICP flag (Input Capture flag) */
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 002A TIFR1 = 1<<TOV1;    /* Clear Timer Overflow flag */
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002B timerCounter = 0;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 1
; 0000 002C while ((TIFR1 & (1 << ICF1)) == 0);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 002D 
; 0000 002E count =  (timerCounter * 256 + TCNT0);  //timpul curent + cat a fost overflow
;PCODE: $0000004B VOL: 1
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 1
; 0000 002F result =  count * 0.00857;  // rezultat masurat in milimetrii
;PCODE: $00000054 VOL: 1
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 1
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0030 DDRD=(1<<DDD7);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0031 if(result <= 50){DDRD=(0<<DDD7);}
;PCODE: $0000005D VOL: 1
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0032 else if(result >50 && result <=100){OCR2A = 0xFF;}
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 1
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 1
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0033 else if(result >100 && result <=150){OCR2A = 0x20;}
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 1
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 1
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0034 else if(result >150 && result <=200 ){OCR2A = 0x10;}
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 1
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 1
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0035 else { OCR2A = 0x00;}
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0036 delay_ms(100);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0037 }
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0038 }
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
