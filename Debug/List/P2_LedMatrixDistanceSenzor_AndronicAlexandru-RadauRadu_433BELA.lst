
AVRASM ver. 2.1.30  D:\P2_LedMatrixDistanceSenzor_AndronicAlexandru-RadauRadu_433BELA\Debug\List\P2_LedMatrixDistanceSenzor_AndronicAlexandru-RadauRadu_433BELA.asm Wed Jun 01 10:33:05 2022

                 
                 
                 ;CodeVisionAVR C Compiler V3.48b 
                 ;(C) Copyright 1998-2022 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega164A
                 ;Program type           : Application
                 ;Clock frequency        : 20.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega164A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x04FF
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0051 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0080 	JMP  _ovf_interrupt
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00003e 2710
00003f 03e8
000040 0064
000041 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000042 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000043 1000
000044 0100
000045 0010
000046 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x2020060:
D:\P2_LedMatrixDistanceSenzor_AndronicAlexandru-RadauRadu_433BELA\Debug\List\P2_LedMatrixDistanceSenzor_AndronicAlexandru-RadauRadu_433BELA.asm(1468): warning: .cseg .db misalignment - padding zero byte
000047 0001      	.DB  0x1
                 _0x2020000:
000048 4e2d
000049 4e41
00004a 4900
00004b 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\P2_LedMatrixDistanceSenzor_AndronicAlexandru-RadauRadu_433BELA\Debug\List\P2_LedMatrixDistanceSenzor_AndronicAlexandru-RadauRadu_433BELA.asm(1471): warning: .cseg .db misalignment - padding zero byte
00004c 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00004d 0001      	.DW  0x01
00004e 020c      	.DW  __seed_G101
00004f 008e      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
000050 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000051 94f8      	CLI
000052 27ee      	CLR  R30
000053 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000054 e0f1      	LDI  R31,1
000055 bff5      	OUT  MCUCR,R31
000056 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000057 e08d      	LDI  R24,(14-2)+1
000058 e0a2      	LDI  R26,2
000059 27bb      	CLR  R27
                 __CLEAR_REG:
00005a 93ed      	ST   X+,R30
00005b 958a      	DEC  R24
00005c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005e e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005f e0a0      	LDI  R26,LOW(__SRAM_START)
000060 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000061 93ed      	ST   X+,R30
000062 9701      	SBIW R24,1
000063 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000064 e9ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000065 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000066 9185      	LPM  R24,Z+
000067 9195      	LPM  R25,Z+
000068 9700      	SBIW R24,0
000069 f061      	BREQ __GLOBAL_INI_END
00006a 91a5      	LPM  R26,Z+
00006b 91b5      	LPM  R27,Z+
00006c 9005      	LPM  R0,Z+
00006d 9015      	LPM  R1,Z+
00006e 01bf      	MOVW R22,R30
00006f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000070 9005      	LPM  R0,Z+
000071 920d      	ST   X+,R0
000072 9701      	SBIW R24,1
000073 f7e1      	BRNE __GLOBAL_INI_LOOP
000074 01fb      	MOVW R30,R22
000075 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000076 e0e0      	LDI  R30,__GPIOR0_INIT
000077 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000078 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000079 bfed      	OUT  SPL,R30
00007a e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007c e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007d e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007e 940c 009a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x200
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;interrupt [19] void ovf_interrupt (void)
                 ; 0000 000C {
                 
                 	.CSEG
                 _ovf_interrupt:
                 ; .FSTART _ovf_interrupt
000080 936a      	ST   -Y,R22
000081 937a      	ST   -Y,R23
000082 93ea      	ST   -Y,R30
000083 93fa      	ST   -Y,R31
000084 b7ef      	IN   R30,SREG
000085 93ea      	ST   -Y,R30
                 ; 0000 000D timerCounter = timerCounter+1; // count the number of overflows
000086 d0f5      	RCALL SUBOPT_0x0
                +
000087 5fef     +SUBI R30 , LOW ( - 1 )
000088 4fff     +SBCI R31 , HIGH ( - 1 )
000089 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00008a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00008b 93e0 0200 	STS  _timerCounter,R30
00008d 93f0 0201 	STS  _timerCounter+1,R31
00008f 9360 0202 	STS  _timerCounter+2,R22
000091 9370 0203 	STS  _timerCounter+3,R23
                 ; 0000 000E }
000093 91e9      	LD   R30,Y+
000094 bfef      	OUT  SREG,R30
000095 91f9      	LD   R31,Y+
000096 91e9      	LD   R30,Y+
000097 9179      	LD   R23,Y+
000098 9169      	LD   R22,Y+
000099 9518      	RETI
                 ; .FEND
                 ;void main(void)
                 ; 0000 0015 {result = 0; timerCounter = 0;
                 _main:
                 ; .FSTART _main
00009a e0e0      	LDI  R30,LOW(0)
00009b 93e0 0204 	STS  _result,R30
00009d 93e0 0205 	STS  _result+1,R30
00009f 93e0 0206 	STS  _result+2,R30
0000a1 93e0 0207 	STS  _result+3,R30
0000a3 d0e1      	RCALL SUBOPT_0x1
                 ; 0000 0016 Init_UC();
0000a4 d07a      	RCALL _Init_UC
                 ; 0000 0017 TCCR0B = (0<<CS02)|(0<<CS01)|(1<<CS00); // select internal clock with no prescaling
0000a5 e0e1      	LDI  R30,LOW(1)
0000a6 bde5      	OUT  0x25,R30
                 ; 0000 0018 TCNT0 = 0; // reset counter to zero
0000a7 e0e0      	LDI  R30,LOW(0)
0000a8 bde6      	OUT  0x26,R30
                 ; 0000 0019 TIMSK0 = 1<<TOIE0; // enable timer interrupt
0000a9 e0e1      	LDI  R30,LOW(1)
0000aa 93e0 006e 	STS  110,R30
                 ; 0000 001A #asm("sei");
0000ac 9478      	SEI
                 ; 0000 001B 
                 ; 0000 001C while (TRUE)
                 _0x3:
                 ; 0000 001D {wdogtrig();
0000ad 95a8      	WDR
                 ; 0000 001E 
                 ; 0000 001F PORTA.0 =1; // set high for 10us
0000ae 9a10      	SBI  0x2,0
                 ; 0000 0020 delay_us(10);
                +
0000af e483     +LDI R24 , LOW ( 67 )
                +__DELAY_USB_LOOP :
0000b0 958a     +DEC R24
0000b1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 67
                 ; 0000 0021 PORTA.0 = 0; // clear
0000b2 9810      	CBI  0x2,0
                 ; 0000 0022 TCNT1H = 0;TCNT1L = 0;    /* Clear Timer counter */
0000b3 d0db      	RCALL SUBOPT_0x2
                 ; 0000 0023 TCCR1B = 0x41;    /* Capture on rising edge, No prescaler*/
0000b4 e4e1      	LDI  R30,LOW(65)
0000b5 d0df      	RCALL SUBOPT_0x3
                 ; 0000 0024 TIFR1 = 1<<ICF1;    /* Clear ICP flag (Input Capture flag) */
                 ; 0000 0025 TIFR1 = 1<<TOV1;    /* Clear Timer Overflow flag */
                 ; 0000 0026 while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for rising edge */
                 _0xA:
0000b6 9bb5      	SBIS 0x16,5
0000b7 cffe      	RJMP _0xA
                 ; 0000 0027 TCNT1H = 0;TCNT1L = 0;    /* Clear Timer counter */
0000b8 d0d6      	RCALL SUBOPT_0x2
                 ; 0000 0028 TCCR1B = 0x01;    /* Capture on falling edge, No prescaler */
0000b9 e0e1      	LDI  R30,LOW(1)
0000ba d0da      	RCALL SUBOPT_0x3
                 ; 0000 0029 TIFR1 = 1<<ICF1;    /* Clear ICP flag (Input Capture flag) */
                 ; 0000 002A TIFR1 = 1<<TOV1;    /* Clear Timer Overflow flag */
                 ; 0000 002B timerCounter = 0;
0000bb d0c9      	RCALL SUBOPT_0x1
                 ; 0000 002C while ((TIFR1 & (1 << ICF1)) == 0);
                 _0xD:
0000bc 9bb5      	SBIS 0x16,5
0000bd cffe      	RJMP _0xD
                 ; 0000 002D 
                 ; 0000 002E count =  (timerCounter * 256 + TCNT0);  //timpul curent + cat a fost overflow
0000be d0bd      	RCALL SUBOPT_0x0
                +
0000bf e0a0     +LDI R26 , LOW ( 0x100 )
0000c0 e0b1     +LDI R27 , HIGH ( 0x100 )
0000c1 e080     +LDI R24 , BYTE3 ( 0x100 )
0000c2 e090     +LDI R25 , BYTE4 ( 0x100 )
                 	__GETD2N 0x100
0000c3 d110      	RCALL __MULD12U
0000c4 01df      	MOVW R26,R30
0000c5 01cb      	MOVW R24,R22
0000c6 b5e6      	IN   R30,0x26
0000c7 e0f0      	LDI  R31,0
                +
0000c8 2f6f     +MOV R22 , R31
0000c9 0f66     +ADD R22 , R22
0000ca 0b66     +SBC R22 , R22
0000cb 2f76     +MOV R23 , R22
                 	__CWD1
                +
0000cc 0fea     +ADD R30 , R26
0000cd 1ffb     +ADC R31 , R27
0000ce 1f68     +ADC R22 , R24
0000cf 1f79     +ADC R23 , R25
                 	__ADDD12
0000d0 93e0 0208 	STS  _count,R30
0000d2 93f0 0209 	STS  _count+1,R31
0000d4 9360 020a 	STS  _count+2,R22
0000d6 9370 020b 	STS  _count+3,R23
                 ; 0000 002F result =  count * 0.00857;  // rezultat masurat in milimetrii
0000d8 91e0 0208 	LDS  R30,_count
0000da 91f0 0209 	LDS  R31,_count+1
0000dc 9160 020a 	LDS  R22,_count+2
0000de 9170 020b 	LDS  R23,_count+3
0000e0 d177      	RCALL __CDF1U
                +
0000e1 e2af     +LDI R26 , LOW ( 0x3C0C692F )
0000e2 e6b9     +LDI R27 , HIGH ( 0x3C0C692F )
0000e3 e08c     +LDI R24 , BYTE3 ( 0x3C0C692F )
0000e4 e39c     +LDI R25 , BYTE4 ( 0x3C0C692F )
                 	__GETD2N 0x3C0C692F
0000e5 d1a1      	RCALL __MULF12
0000e6 e0a4      	LDI  R26,LOW(_result)
0000e7 e0b2      	LDI  R27,HIGH(_result)
0000e8 d138      	RCALL __CFD1U
                +
0000e9 93ed     +ST X + , R30
0000ea 93fd     +ST X + , R31
0000eb 936d     +ST X + , R22
0000ec 937c     +ST X , R23
                 	__PUTDP1
                 ; 0000 0030 DDRD=(1<<DDD7);
0000ed e8e0      	LDI  R30,LOW(128)
0000ee b9ea      	OUT  0xA,R30
                 ; 0000 0031 if(result <= 50){DDRD=(0<<DDD7);}
0000ef d0ac      	RCALL SUBOPT_0x4
0000f0 f418      	BRSH _0x10
0000f1 e0e0      	LDI  R30,LOW(0)
0000f2 b9ea      	OUT  0xA,R30
                 ; 0000 0032 else if(result >50 && result <=100){OCR2A = 0xFF;}
0000f3 c026      	RJMP _0x11
                 _0x10:
0000f4 d0a7      	RCALL SUBOPT_0x4
0000f5 f010      	BRLO _0x13
0000f6 d0b5      	RCALL SUBOPT_0x5
0000f7 f008      	BRLO _0x14
                 _0x13:
0000f8 c002      	RJMP _0x12
                 _0x14:
0000f9 efef      	LDI  R30,LOW(255)
0000fa c01d      	RJMP _0x1F
                 ; 0000 0033 else if(result >100 && result <=150){OCR2A = 0x20;}
                 _0x12:
0000fb d0b0      	RCALL SUBOPT_0x5
0000fc f010      	BRLO _0x17
0000fd d0be      	RCALL SUBOPT_0x6
0000fe f008      	BRLO _0x18
                 _0x17:
0000ff c002      	RJMP _0x16
                 _0x18:
000100 e2e0      	LDI  R30,LOW(32)
000101 c016      	RJMP _0x1F
                 ; 0000 0034 else if(result >150 && result <=200 ){OCR2A = 0x10;}
                 _0x16:
000102 d0b9      	RCALL SUBOPT_0x6
000103 f080      	BRLO _0x1B
000104 91a0 0204 	LDS  R26,_result
000106 91b0 0205 	LDS  R27,_result+1
000108 9180 0206 	LDS  R24,_result+2
00010a 9190 0207 	LDS  R25,_result+3
                +
00010c 3ca9     +CPI R26 , LOW ( 0xC9 )
00010d e0e0     +LDI R30 , HIGH ( 0xC9 )
00010e 07be     +CPC R27 , R30
00010f e0e0     +LDI R30 , BYTE3 ( 0xC9 )
000110 078e     +CPC R24 , R30
000111 e0e0     +LDI R30 , BYTE4 ( 0xC9 )
000112 079e     +CPC R25 , R30
                 	__CPD2N 0xC9
000113 f008      	BRLO _0x1C
                 _0x1B:
000114 c002      	RJMP _0x1A
                 _0x1C:
000115 e1e0      	LDI  R30,LOW(16)
000116 c001      	RJMP _0x1F
                 ; 0000 0035 else { OCR2A = 0x00;}
                 _0x1A:
000117 e0e0      	LDI  R30,LOW(0)
                 _0x1F:
000118 93e0 00b3 	STS  179,R30
                 _0x11:
                 ; 0000 0036 delay_ms(100);
00011a e6a4      	LDI  R26,LOW(100)
00011b e0b0      	LDI  R27,0
00011c d1b8      	RCALL _delay_ms
                 ; 0000 0037 }
00011d cf8f      	RJMP _0x3
                 ; 0000 0038 }
                 _0x1E:
00011e cfff      	RJMP _0x1E
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;void Init_UC(void)
                 ; 0001 001D {
                 
                 	.CSEG
                 _Init_UC:
                 ; .FSTART _Init_UC
                 ; 0001 001E // Declare your local variables here
                 ; 0001 001F 
                 ; 0001 0020 // Crystal Oscillator division factor: 1
                 ; 0001 0021 #pragma optsize-
                 ; 0001 0022 CLKPR=(1<<CLKPCE);
00011f e8e0      	LDI  R30,LOW(128)
000120 93e0 0061 	STS  97,R30
                 ; 0001 0023 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
000122 e0e0      	LDI  R30,LOW(0)
000123 93e0 0061 	STS  97,R30
                 ; 0001 0024 #ifdef _OPTIMIZE_SIZE_
                 ; 0001 0025 #pragma optsize+
                 ; 0001 0026 #endif
                 ; 0001 0027 
                 ; 0001 0028 /// Input/Output Ports initialization
                 ; 0001 0029 // Port A initialization
                 ; 0001 002A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0001 002B DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (1<<DDA0);
000125 e0e1      	LDI  R30,LOW(1)
000126 b9e1      	OUT  0x1,R30
                 ; 0001 002C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0001 002D PORTA=(1<<PORTA7) | (1<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
000127 efef      	LDI  R30,LOW(255)
000128 b9e2      	OUT  0x2,R30
                 ; 0001 002E 
                 ; 0001 002F // Port B initialization
                 ; 0001 0030 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0001 0031 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
000129 e0e0      	LDI  R30,LOW(0)
00012a b9e4      	OUT  0x4,R30
                 ; 0001 0032 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0001 0033 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00012b b9e5      	OUT  0x5,R30
                 ; 0001 0034 
                 ; 0001 0035 // Port C initialization
                 ; 0001 0036 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0001 0037 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
00012c b9e7      	OUT  0x7,R30
                 ; 0001 0038 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0001 0039 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
00012d b9e8      	OUT  0x8,R30
                 ; 0001 003A 
                 ; 0001 003B // Port D initialization
                 ; 0001 003C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0001 003D DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00012e e8e0      	LDI  R30,LOW(128)
00012f b9ea      	OUT  0xA,R30
                 ; 0001 003E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0001 003F PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (1<<PORTD1) | (1<<PORTD0);
000130 efef      	LDI  R30,LOW(255)
000131 b9eb      	OUT  0xB,R30
                 ; 0001 0040 
                 ; 0001 0041 // Timer/Counter 0 initialization
                 ; 0001 0042 // Clock source: System Clock
                 ; 0001 0043 // Clock value: Timer 0 Stopped
                 ; 0001 0044 // Mode: Normal top=0xFF
                 ; 0001 0045 // OC0A output: Disconnected
                 ; 0001 0046 // OC0B output: Disconnected
                 ; 0001 0047 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
000132 e0e0      	LDI  R30,LOW(0)
000133 bde4      	OUT  0x24,R30
                 ; 0001 0048 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000134 bde5      	OUT  0x25,R30
                 ; 0001 0049 TCNT0=0x00;
000135 bde6      	OUT  0x26,R30
                 ; 0001 004A OCR0A=0x00;
000136 bde7      	OUT  0x27,R30
                 ; 0001 004B OCR0B=0x00;
000137 bde8      	OUT  0x28,R30
                 ; 0001 004C 
                 ; 0001 004D // Timer/Counter 1 initialization
                 ; 0001 004E // Clock source: System Clock
                 ; 0001 004F // Clock value: Timer1 Stopped
                 ; 0001 0050 // Mode: Normal top=0xFFFF
                 ; 0001 0051 // OC1A output: Disconnected
                 ; 0001 0052 // OC1B output: Disconnected
                 ; 0001 0053 // Noise Canceler: Off
                 ; 0001 0054 // Input Capture on Falling Edge
                 ; 0001 0055 // Timer1 Overflow Interrupt: Off
                 ; 0001 0056 // Input Capture Interrupt: Off
                 ; 0001 0057 // Compare A Match Interrupt: Off
                 ; 0001 0058 // Compare B Match Interrupt: Off
                 ; 0001 0059 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000138 93e0 0080 	STS  128,R30
                 ; 0001 005A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
00013a 93e0 0081 	STS  129,R30
                 ; 0001 005B TCNT1H=0x00;
00013c d052      	RCALL SUBOPT_0x2
                 ; 0001 005C TCNT1L=0x00;
                 ; 0001 005D ICR1H=0x00;
00013d e0e0      	LDI  R30,LOW(0)
00013e 93e0 0087 	STS  135,R30
                 ; 0001 005E ICR1L=0x00;
000140 93e0 0086 	STS  134,R30
                 ; 0001 005F OCR1AH=0x00;
000142 93e0 0089 	STS  137,R30
                 ; 0001 0060 OCR1AL=0x00;
000144 93e0 0088 	STS  136,R30
                 ; 0001 0061 OCR1BH=0x00;
000146 93e0 008b 	STS  139,R30
                 ; 0001 0062 OCR1BL=0x00;
000148 93e0 008a 	STS  138,R30
                 ; 0001 0063 
                 ; 0001 0064 // Timer/Counter 2 initialization
                 ; 0001 0065 // Clock source: System Clock
                 ; 0001 0066 // Clock value: Timer2 Stopped
                 ; 0001 0067 // Mode: Normal top=0xFF
                 ; 0001 0068 // OC2A output: Disconnected
                 ; 0001 0069 // OC2B output: Disconnected
                 ; 0001 006A ASSR=0x00;
00014a 93e0 00b6 	STS  182,R30
                 ; 0001 006B TCCR2A = 0b01000011;
00014c e4e3      	LDI  R30,LOW(67)
00014d 93e0 00b0 	STS  176,R30
                 ; 0001 006C TCCR2B = 0b00001001;
00014f e0e9      	LDI  R30,LOW(9)
000150 93e0 00b1 	STS  177,R30
                 ; 0001 006D TCNT2=0x00;
000152 e0e0      	LDI  R30,LOW(0)
000153 93e0 00b2 	STS  178,R30
                 ; 0001 006E OCR2A=0x00;
000155 93e0 00b3 	STS  179,R30
                 ; 0001 006F OCR2B=0x00;
000157 93e0 00b4 	STS  180,R30
                 ; 0001 0070 // Timer/Counter 0 Interrupt(s) initialization
                 ; 0001 0071 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
000159 93e0 006e 	STS  110,R30
                 ; 0001 0072 
                 ; 0001 0073 // Timer/Counter 1 Interrupt(s) initialization
                 ; 0001 0074 TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
00015b 93e0 006f 	STS  111,R30
                 ; 0001 0075 
                 ; 0001 0076 // Timer/Counter 2 Interrupt(s) initialization
                 ; 0001 0077 TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
00015d 93e0 0070 	STS  112,R30
                 ; 0001 0078 
                 ; 0001 0079 // External Interrupt(s) initialization
                 ; 0001 007A // INT0: Off
                 ; 0001 007B // INT1: Off
                 ; 0001 007C // INT2: Off
                 ; 0001 007D // Interrupt on any change on pins PCINT0-7: Off
                 ; 0001 007E // Interrupt on any change on pins PCINT8-15: Off
                 ; 0001 007F // Interrupt on any change on pins PCINT16-23: Off
                 ; 0001 0080 // Interrupt on any change on pins PCINT24-31: Off
                 ; 0001 0081 EICRA=(0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
00015f 93e0 0069 	STS  105,R30
                 ; 0001 0082 EIMSK=(0<<INT2) | (0<<INT1) | (0<<INT0);
000161 bbed      	OUT  0x1D,R30
                 ; 0001 0083 PCICR=(0<<PCIE3) | (0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
000162 93e0 0068 	STS  104,R30
                 ; 0001 0084 
                 ; 0001 0085 // USART0 initialization
                 ; 0001 0086 // USART0 disabled
                 ; 0001 0087 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
000164 93e0 00c1 	STS  193,R30
                 ; 0001 0088 
                 ; 0001 0089 // USART1 initialization
                 ; 0001 008A // USART1 disabled
                 ; 0001 008B UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
000166 93e0 00c9 	STS  201,R30
                 ; 0001 008C 
                 ; 0001 008D // Analog Comparator initialization
                 ; 0001 008E // Analog Comparator: Off
                 ; 0001 008F // The Analog Comparator's positive input is
                 ; 0001 0090 // connected to the AIN0 pin
                 ; 0001 0091 // The Analog Comparator's negative input is
                 ; 0001 0092 // connected to the AIN1 pin
                 ; 0001 0093 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
000168 e8e0      	LDI  R30,LOW(128)
000169 bfe0      	OUT  0x30,R30
                 ; 0001 0094 ADCSRB=(0<<ACME);
00016a e0e0      	LDI  R30,LOW(0)
00016b 93e0 007b 	STS  123,R30
                 ; 0001 0095 // Digital input buffer on AIN0: On
                 ; 0001 0096 // Digital input buffer on AIN1: On
                 ; 0001 0097 DIDR1=(0<<AIN0D) | (0<<AIN1D);
00016d 93e0 007f 	STS  127,R30
                 ; 0001 0098 
                 ; 0001 0099 // ADC initialization
                 ; 0001 009A // ADC disabled
                 ; 0001 009B ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
00016f 93e0 007a 	STS  122,R30
                 ; 0001 009C 
                 ; 0001 009D // SPI initialization
                 ; 0001 009E // SPI disabled
                 ; 0001 009F SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
000171 bdec      	OUT  0x2C,R30
                 ; 0001 00A0 
                 ; 0001 00A1 // TWI initialization
                 ; 0001 00A2 // TWI disabled
                 ; 0001 00A3 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
000172 93e0 00bc 	STS  188,R30
                 ; 0001 00A4 // Watchdog Timer initialization
                 ; 0001 00A5 // Watchdog Timer Prescaler: OSC/2048
                 ; 0001 00A6 #pragma optsize-
                 ; 0001 00A7 #asm("wdr")
000174 95a8      	WDR
                 ; 0001 00A8 // Write 2 consecutive values to enable watchdog
                 ; 0001 00A9 // this is NOT a mistake !
                 ; 0001 00AA WDTCSR=0x18;
000175 e1e8      	LDI  R30,LOW(24)
000176 93e0 0060 	STS  96,R30
                 ; 0001 00AB WDTCSR=0x08;
000178 e0e8      	LDI  R30,LOW(8)
000179 93e0 0060 	STS  96,R30
                 ; 0001 00AC #ifdef _OPTIMIZE_SIZE_
                 ; 0001 00AD #pragma optsize+
                 ; 0001 00AE #endif
                 ; 0001 00AF }
00017b 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _timerCounter:
000200           	.BYTE 0x4
                 _result:
000204           	.BYTE 0x4
                 _count:
000208           	.BYTE 0x4
                 __seed_G101:
00020c           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
00017c 91e0 0200 	LDS  R30,_timerCounter
00017e 91f0 0201 	LDS  R31,_timerCounter+1
000180 9160 0202 	LDS  R22,_timerCounter+2
000182 9170 0203 	LDS  R23,_timerCounter+3
000184 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1:
000185 e0e0      	LDI  R30,LOW(0)
000186 93e0 0200 	STS  _timerCounter,R30
000188 93e0 0201 	STS  _timerCounter+1,R30
00018a 93e0 0202 	STS  _timerCounter+2,R30
00018c 93e0 0203 	STS  _timerCounter+3,R30
00018e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2:
00018f e0e0      	LDI  R30,LOW(0)
000190 93e0 0085 	STS  133,R30
000192 93e0 0084 	STS  132,R30
000194 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
000195 93e0 0081 	STS  129,R30
000197 e2e0      	LDI  R30,LOW(32)
000198 bbe6      	OUT  0x16,R30
000199 e0e1      	LDI  R30,LOW(1)
00019a bbe6      	OUT  0x16,R30
00019b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x4:
00019c 91a0 0204 	LDS  R26,_result
00019e 91b0 0205 	LDS  R27,_result+1
0001a0 9180 0206 	LDS  R24,_result+2
0001a2 9190 0207 	LDS  R25,_result+3
                +
0001a4 33a3     +CPI R26 , LOW ( 0x33 )
0001a5 e0e0     +LDI R30 , HIGH ( 0x33 )
0001a6 07be     +CPC R27 , R30
0001a7 e0e0     +LDI R30 , BYTE3 ( 0x33 )
0001a8 078e     +CPC R24 , R30
0001a9 e0e0     +LDI R30 , BYTE4 ( 0x33 )
0001aa 079e     +CPC R25 , R30
                 	__CPD2N 0x33
0001ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x5:
0001ac 91a0 0204 	LDS  R26,_result
0001ae 91b0 0205 	LDS  R27,_result+1
0001b0 9180 0206 	LDS  R24,_result+2
0001b2 9190 0207 	LDS  R25,_result+3
                +
0001b4 36a5     +CPI R26 , LOW ( 0x65 )
0001b5 e0e0     +LDI R30 , HIGH ( 0x65 )
0001b6 07be     +CPC R27 , R30
0001b7 e0e0     +LDI R30 , BYTE3 ( 0x65 )
0001b8 078e     +CPC R24 , R30
0001b9 e0e0     +LDI R30 , BYTE4 ( 0x65 )
0001ba 079e     +CPC R25 , R30
                 	__CPD2N 0x65
0001bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x6:
0001bc 91a0 0204 	LDS  R26,_result
0001be 91b0 0205 	LDS  R27,_result+1
0001c0 9180 0206 	LDS  R24,_result+2
0001c2 9190 0207 	LDS  R25,_result+3
                +
0001c4 39a7     +CPI R26 , LOW ( 0x97 )
0001c5 e0e0     +LDI R30 , HIGH ( 0x97 )
0001c6 07be     +CPC R27 , R30
0001c7 e0e0     +LDI R30 , BYTE3 ( 0x97 )
0001c8 078e     +CPC R24 , R30
0001c9 e0e0     +LDI R30 , BYTE4 ( 0x97 )
0001ca 079e     +CPC R25 , R30
                 	__CPD2N 0x97
0001cb 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __ANEGD1:
0001cc 95f0      	COM  R31
0001cd 9560      	COM  R22
0001ce 9570      	COM  R23
0001cf 95e1      	NEG  R30
0001d0 4fff      	SBCI R31,-1
0001d1 4f6f      	SBCI R22,-1
0001d2 4f7f      	SBCI R23,-1
0001d3 9508      	RET
                 
                 __MULD12U:
0001d4 9f7a      	MUL  R23,R26
0001d5 2d70      	MOV  R23,R0
0001d6 9f6b      	MUL  R22,R27
0001d7 0d70      	ADD  R23,R0
0001d8 9ff8      	MUL  R31,R24
0001d9 0d70      	ADD  R23,R0
0001da 9fe9      	MUL  R30,R25
0001db 0d70      	ADD  R23,R0
0001dc 9f6a      	MUL  R22,R26
0001dd 2d60      	MOV  R22,R0
0001de 0d71      	ADD  R23,R1
0001df 9ffb      	MUL  R31,R27
0001e0 0d60      	ADD  R22,R0
0001e1 1d71      	ADC  R23,R1
0001e2 9fe8      	MUL  R30,R24
0001e3 0d60      	ADD  R22,R0
0001e4 1d71      	ADC  R23,R1
0001e5 2788      	CLR  R24
0001e6 9ffa      	MUL  R31,R26
0001e7 2df0      	MOV  R31,R0
0001e8 0d61      	ADD  R22,R1
0001e9 1f78      	ADC  R23,R24
0001ea 9feb      	MUL  R30,R27
0001eb 0df0      	ADD  R31,R0
0001ec 1d61      	ADC  R22,R1
0001ed 1f78      	ADC  R23,R24
0001ee 9fea      	MUL  R30,R26
0001ef 2de0      	MOV  R30,R0
0001f0 0df1      	ADD  R31,R1
0001f1 1f68      	ADC  R22,R24
0001f2 1f78      	ADC  R23,R24
0001f3 9508      	RET
                 
                 __ROUND_REPACK:
0001f4 2355      	TST  R21
0001f5 f442      	BRPL __REPACK
0001f6 3850      	CPI  R21,0x80
0001f7 f411      	BRNE __ROUND_REPACK0
0001f8 ffe0      	SBRS R30,0
0001f9 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0001fa 9631      	ADIW R30,1
0001fb 1f69      	ADC  R22,R25
0001fc 1f79      	ADC  R23,R25
0001fd f06b      	BRVS __REPACK1
                 
                 __REPACK:
0001fe e850      	LDI  R21,0x80
0001ff 2757      	EOR  R21,R23
000200 f411      	BRNE __REPACK0
000201 935f      	PUSH R21
000202 c073      	RJMP __ZERORES
                 __REPACK0:
000203 3f5f      	CPI  R21,0xFF
000204 f031      	BREQ __REPACK1
000205 0f66      	LSL  R22
000206 0c00      	LSL  R0
000207 9557      	ROR  R21
000208 9567      	ROR  R22
000209 2f75      	MOV  R23,R21
00020a 9508      	RET
                 __REPACK1:
00020b 935f      	PUSH R21
00020c 2000      	TST  R0
00020d f00a      	BRMI __REPACK2
00020e c072      	RJMP __MAXRES
                 __REPACK2:
00020f c06b      	RJMP __MINRES
                 
                 __UNPACK:
000210 e850      	LDI  R21,0x80
000211 2e19      	MOV  R1,R25
000212 2215      	AND  R1,R21
000213 0f88      	LSL  R24
000214 1f99      	ROL  R25
000215 2795      	EOR  R25,R21
000216 0f55      	LSL  R21
000217 9587      	ROR  R24
                 
                 __UNPACK1:
000218 e850      	LDI  R21,0x80
000219 2e07      	MOV  R0,R23
00021a 2205      	AND  R0,R21
00021b 0f66      	LSL  R22
00021c 1f77      	ROL  R23
00021d 2775      	EOR  R23,R21
00021e 0f55      	LSL  R21
00021f 9567      	ROR  R22
000220 9508      	RET
                 
                 __CFD1U:
000221 9468      	SET
000222 c001      	RJMP __CFD1U0
                 __CFD1:
000223 94e8      	CLT
                 __CFD1U0:
000224 935f      	PUSH R21
000225 dff2      	RCALL __UNPACK1
000226 3870      	CPI  R23,0x80
000227 f018      	BRLO __CFD10
000228 3f7f      	CPI  R23,0xFF
000229 f408      	BRCC __CFD10
00022a c04b      	RJMP __ZERORES
                 __CFD10:
00022b e156      	LDI  R21,22
00022c 1b57      	SUB  R21,R23
00022d f4aa      	BRPL __CFD11
00022e 9551      	NEG  R21
00022f 3058      	CPI  R21,8
000230 f40e      	BRTC __CFD19
000231 3059      	CPI  R21,9
                 __CFD19:
000232 f030      	BRLO __CFD17
000233 efef      	SER  R30
000234 efff      	SER  R31
000235 ef6f      	SER  R22
000236 e77f      	LDI  R23,0x7F
000237 f977      	BLD  R23,7
000238 c01a      	RJMP __CFD15
                 __CFD17:
000239 2777      	CLR  R23
00023a 2355      	TST  R21
00023b f0b9      	BREQ __CFD15
                 __CFD18:
00023c 0fee      	LSL  R30
00023d 1fff      	ROL  R31
00023e 1f66      	ROL  R22
00023f 1f77      	ROL  R23
000240 955a      	DEC  R21
000241 f7d1      	BRNE __CFD18
000242 c010      	RJMP __CFD15
                 __CFD11:
000243 2777      	CLR  R23
                 __CFD12:
000244 3058      	CPI  R21,8
000245 f028      	BRLO __CFD13
000246 2fef      	MOV  R30,R31
000247 2ff6      	MOV  R31,R22
000248 2f67      	MOV  R22,R23
000249 5058      	SUBI R21,8
00024a cff9      	RJMP __CFD12
                 __CFD13:
00024b 2355      	TST  R21
00024c f031      	BREQ __CFD15
                 __CFD14:
00024d 9576      	LSR  R23
00024e 9567      	ROR  R22
00024f 95f7      	ROR  R31
000250 95e7      	ROR  R30
000251 955a      	DEC  R21
000252 f7d1      	BRNE __CFD14
                 __CFD15:
000253 2000      	TST  R0
000254 f40a      	BRPL __CFD16
000255 df76      	RCALL __ANEGD1
                 __CFD16:
000256 915f      	POP  R21
000257 9508      	RET
                 
                 __CDF1U:
000258 9468      	SET
000259 c001      	RJMP __CDF1U0
                 __CDF1:
00025a 94e8      	CLT
                 __CDF1U0:
00025b 9730      	SBIW R30,0
00025c 4060      	SBCI R22,0
00025d 4070      	SBCI R23,0
00025e f0b1      	BREQ __CDF10
00025f 2400      	CLR  R0
000260 f026      	BRTS __CDF11
000261 2377      	TST  R23
000262 f412      	BRPL __CDF11
000263 9400      	COM  R0
000264 df67      	RCALL __ANEGD1
                 __CDF11:
000265 2e17      	MOV  R1,R23
000266 e17e      	LDI  R23,30
000267 2011      	TST  R1
                 __CDF12:
000268 f032      	BRMI __CDF13
000269 957a      	DEC  R23
00026a 0fee      	LSL  R30
00026b 1fff      	ROL  R31
00026c 1f66      	ROL  R22
00026d 1c11      	ROL  R1
00026e cff9      	RJMP __CDF12
                 __CDF13:
00026f 2fef      	MOV  R30,R31
000270 2ff6      	MOV  R31,R22
000271 2d61      	MOV  R22,R1
000272 935f      	PUSH R21
000273 df8a      	RCALL __REPACK
000274 915f      	POP  R21
                 __CDF10:
000275 9508      	RET
                 
                 __ZERORES:
000276 27ee      	CLR  R30
000277 27ff      	CLR  R31
000278 01bf      	MOVW R22,R30
000279 915f      	POP  R21
00027a 9508      	RET
                 
                 __MINRES:
00027b efef      	SER  R30
00027c efff      	SER  R31
00027d e76f      	LDI  R22,0x7F
00027e ef7f      	SER  R23
00027f 915f      	POP  R21
000280 9508      	RET
                 
                 __MAXRES:
000281 efef      	SER  R30
000282 efff      	SER  R31
000283 e76f      	LDI  R22,0x7F
000284 e77f      	LDI  R23,0x7F
000285 915f      	POP  R21
000286 9508      	RET
                 
                 __MULF12:
000287 935f      	PUSH R21
000288 df87      	RCALL __UNPACK
000289 3870      	CPI  R23,0x80
00028a f359      	BREQ __ZERORES
00028b 3890      	CPI  R25,0x80
00028c f349      	BREQ __ZERORES
00028d 2401      	EOR  R0,R1
00028e 9408      	SEC
00028f 1f79      	ADC  R23,R25
000290 f423      	BRVC __MULF124
000291 f324      	BRLT __ZERORES
                 __MULF125:
000292 2000      	TST  R0
000293 f33a      	BRMI __MINRES
000294 cfec      	RJMP __MAXRES
                 __MULF124:
000295 920f      	PUSH R0
000296 931f      	PUSH R17
000297 932f      	PUSH R18
000298 933f      	PUSH R19
000299 934f      	PUSH R20
00029a 2711      	CLR  R17
00029b 2722      	CLR  R18
00029c 2799      	CLR  R25
00029d 9f68      	MUL  R22,R24
00029e 01a0      	MOVW R20,R0
00029f 9f8f      	MUL  R24,R31
0002a0 2d30      	MOV  R19,R0
0002a1 0d41      	ADD  R20,R1
0002a2 1f59      	ADC  R21,R25
0002a3 9f6b      	MUL  R22,R27
0002a4 0d30      	ADD  R19,R0
0002a5 1d41      	ADC  R20,R1
0002a6 1f59      	ADC  R21,R25
0002a7 9f8e      	MUL  R24,R30
0002a8 d027      	RCALL __MULF126
0002a9 9fbf      	MUL  R27,R31
0002aa d025      	RCALL __MULF126
0002ab 9f6a      	MUL  R22,R26
0002ac d023      	RCALL __MULF126
0002ad 9fbe      	MUL  R27,R30
0002ae d01d      	RCALL __MULF127
0002af 9faf      	MUL  R26,R31
0002b0 d01b      	RCALL __MULF127
0002b1 9fae      	MUL  R26,R30
0002b2 0d11      	ADD  R17,R1
0002b3 1f29      	ADC  R18,R25
0002b4 1f39      	ADC  R19,R25
0002b5 1f49      	ADC  R20,R25
0002b6 1f59      	ADC  R21,R25
0002b7 2fe3      	MOV  R30,R19
0002b8 2ff4      	MOV  R31,R20
0002b9 2f65      	MOV  R22,R21
0002ba 2f52      	MOV  R21,R18
0002bb 914f      	POP  R20
0002bc 913f      	POP  R19
0002bd 912f      	POP  R18
0002be 911f      	POP  R17
0002bf 900f      	POP  R0
0002c0 2366      	TST  R22
0002c1 f02a      	BRMI __MULF122
0002c2 0f55      	LSL  R21
0002c3 1fee      	ROL  R30
0002c4 1fff      	ROL  R31
0002c5 1f66      	ROL  R22
0002c6 c002      	RJMP __MULF123
                 __MULF122:
0002c7 9573      	INC  R23
0002c8 f24b      	BRVS __MULF125
                 __MULF123:
0002c9 df2a      	RCALL __ROUND_REPACK
0002ca 915f      	POP  R21
0002cb 9508      	RET
                 
                 __MULF127:
0002cc 0d10      	ADD  R17,R0
0002cd 1d21      	ADC  R18,R1
0002ce 1f39      	ADC  R19,R25
0002cf c002      	RJMP __MULF128
                 __MULF126:
0002d0 0d20      	ADD  R18,R0
0002d1 1d31      	ADC  R19,R1
                 __MULF128:
0002d2 1f49      	ADC  R20,R25
0002d3 1f59      	ADC  R21,R25
0002d4 9508      	RET
                 
                 _delay_ms:
0002d5 9610      	adiw r26,0
0002d6 f039      	breq __delay_ms1
                 __delay_ms0:
0002d7 95a8      	wdr
                +
0002d8 e888     +LDI R24 , LOW ( 0x1388 )
0002d9 e193     +LDI R25 , HIGH ( 0x1388 )
                +__DELAY_USW_LOOP :
0002da 9701     +SBIW R24 , 1
0002db f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x1388
0002dc 9711      	sbiw r26,1
0002dd f7c9      	brne __delay_ms0
                 __delay_ms1:
0002de 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega164A register use summary:
r0 :  30 r1 :  19 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   5 r18:   7 r19:   8 r20:   8 r21:  44 r22:  51 r23:  49 
r24:  35 r25:  32 r26:  26 r27:  22 r28:   1 r29:   1 r30: 174 r31:  38 
x  :   7 y  :  10 z  :   7 
Registers used: 20 out of 35 (57.1%)

ATmega164A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  25 add   :  16 
adiw  :   2 and   :   2 andi  :   0 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   8 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   9 
brlt  :   1 brmi  :   4 brne  :  10 brpl  :   4 brsh  :   1 brtc  :   1 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   0 call  :   0 
cbi   :   1 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   2 clv   :   0 clz   :   0 com   :   4 
cp    :   0 cpc   :  12 cpi   :  13 cpse  :   0 dec   :   5 des   :   0 
eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   1 jmp   :  32 ld    :   5 ldd   :   0 ldi   :  83 
lds   :  24 lpm   :   7 lsl   :   9 lsr   :   1 mov   :  21 movw  :   7 
mul   :  19 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   0 out   :  29 pop   :  11 push  :  10 rcall :  32 ret   :  20 
reti  :   1 rjmp  :  26 rol   :  11 ror   :   7 sbc   :   1 sbci  :   8 
sbi   :   1 sbic  :   0 sbis  :   2 sbiw  :   6 sbr   :   0 sbrc  :   0 
sbrs  :   1 sec   :   1 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  12 std   :   0 sts   :  50 sub   :   1 subi  :   2 swap  :   0 
tst   :   9 wdr   :   3 
Instructions used: 64 out of 116 (55.2%)

ATmega164A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005be   1432     38   1470   16384   9.0%
[.dseg] 0x000100 0x000210      0     16     16    1024   1.6%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 2 warnings
